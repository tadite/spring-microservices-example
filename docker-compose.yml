version: '3.5'
services:
  postgres:
    image: habits/postgres
    hostname: postgres
    networks:
      - lan
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_HOST_AUTH_METHOD: password
    volumes:
      - pgdata:/var/lib/postgresql/data
    build:
      context: ./postgres
  mongo:
    image: mongo
    hostname: mongo
    ports:
      - "27017:27017"
    networks:
      - lan
    volumes:
      - mongodata:/data/db
  zookeeper:
    image: wurstmeister/zookeeper
    expose:
      - "2181"
  kafka:
    build:
      context: ./kafka
    ports:
      - "9092:9092"
    expose:
      - "9093"
    environment:
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://127.0.0.1:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:SASL_PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/kafka_server_jaas.conf"
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
    depends_on:
      - zookeeper
    volumes:
      - kafkadata:/etc/kafka
  tracker-service:
    image: habits/tracker-service
    hostname: tracker-service
    depends_on:
      - registry-service
      - config-server
      - mongo
      - kafka
    networks:
      - lan
    build:
      context: ./tracker-service
  project-service:
    image: habits/project-service
    hostname: project-service
    depends_on:
      - registry-service
      - config-server
      - postgres
    networks:
      - lan
    build:
      context: ./project-service
  history-service:
    image: habits/history-service
    hostname: history-service
    depends_on:
      - registry-service
      - config-server
      - mongo
      - kafka
    networks:
      - lan
    build:
      context: ./customer-history-service
  api-gateway:
    image: habits/api-gateway
    hostname: api-gateway
    depends_on:
      - registry-service
      - config-server
    networks:
      - lan
    build:
      context: ./api-gateway
#  frontend:
#    image: habits/frontend
#    hostname: frontend
#    networks:
#      - lan
#    ports:
#      - 80:80
#    build:
#      context: ./frontend
  config-server:
    image: habits/config-server
    hostname: config-server
    ports:
      - "8888:8888"
    networks:
      - lan
    build:
      context: ./config-server
  registry-service:
    image: habits/registry-service
    hostname: registry-service
    depends_on:
      - config-server
    ports:
      - "8761:8761"
    networks:
      - lan
    build:
      context: ./registry-service
networks:
  lan:
    driver: bridge
volumes:
  pgdata:
  mongodata:
  kafkadata:
